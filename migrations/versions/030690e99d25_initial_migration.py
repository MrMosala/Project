"""Initial migration

Revision ID: 030690e99d25
Revises: 
Create Date: 2024-09-20 10:18:21.838851

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = '030690e99d25'
down_revision = None
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Roles',
    sa.Column('RoleID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('RoleName', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('RoleID'),
    sa.UniqueConstraint('RoleName')
    )
    op.create_table('Users',
    sa.Column('UserID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('PasswordHash', sa.String(length=255), nullable=False),
    sa.Column('Email', sa.String(length=100), nullable=False),
    sa.Column('FirstName', sa.String(length=50), nullable=True),
    sa.Column('LastName', sa.String(length=50), nullable=True),
    sa.Column('IsActive', sa.Boolean(), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=False),
    sa.Column('LastLogin', sa.DateTime(), nullable=True),
    sa.Column('ProfilePicture', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('UserID'),
    sa.UniqueConstraint('Email')
    )
    op.create_table('UserRoles',
    sa.Column('UserID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('RoleID', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['RoleID'], ['Roles.RoleID'], ),
    sa.ForeignKeyConstraint(['UserID'], ['Users.UserID'], ),
    sa.PrimaryKeyConstraint('UserID', 'RoleID')
    )
    # ### end Alembic commands ###


def downgrade_():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('UserRoles')
    op.drop_table('Users')
    op.drop_table('Roles')
    # ### end Alembic commands ###


def upgrade_operational():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Insights',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('user_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CommonItemPairs',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('item_pair', sa.String(length=510), nullable=False),
    sa.Column('pair_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CustomerFrequency',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('purchase_frequency', sa.Integer(), nullable=False),
    sa.Column('customer_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CustomerSegments',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('segment', sa.String(length=50), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Files',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('user_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ItemFrequency',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('item_description', sa.String(length=255), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('MonthlySales',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('OrderStatus',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('status_type', sa.String(length=50), nullable=False),
    sa.Column('status_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('QuantityPriceData',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('quantity_ordered', sa.Integer(), nullable=False),
    sa.Column('price_each', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SalesData',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('product_line', sa.String(length=100), nullable=False),
    sa.Column('sales', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SalesOverTime',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('daily_sales', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SeasonalItems',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('item_description', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_messages',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('user_message', sa.Text(), nullable=False),
    sa.Column('bot_response', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['insight_id'], ['Insights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_operational():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chat_messages')
    op.drop_table('SeasonalItems')
    op.drop_table('SalesOverTime')
    op.drop_table('SalesData')
    op.drop_table('QuantityPriceData')
    op.drop_table('OrderStatus')
    op.drop_table('MonthlySales')
    op.drop_table('ItemFrequency')
    op.drop_table('Files')
    op.drop_table('CustomerSegments')
    op.drop_table('CustomerFrequency')
    op.drop_table('CommonItemPairs')
    op.drop_table('Insights')
    # ### end Alembic commands ###


def upgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_entries',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', mssql.UNIQUEIDENTIFIER(), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('table_name', sa.String(length=50), nullable=False),
    sa.Column('record_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_audit():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('audit_entries')
    # ### end Alembic commands ###


def upgrade_archive():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ArchivedInsights',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('user_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedCommonItemPairs',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('item_pair', sa.String(length=510), nullable=False),
    sa.Column('pair_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedCustomerFrequency',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('purchase_frequency', sa.Integer(), nullable=False),
    sa.Column('customer_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedCustomerSegments',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('segment', sa.String(length=50), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedFiles',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('user_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedItemFrequency',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('item_description', sa.String(length=255), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedMonthlySales',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedOrderStatus',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('status_type', sa.String(length=50), nullable=False),
    sa.Column('status_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedQuantityPriceData',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('quantity_ordered', sa.Integer(), nullable=False),
    sa.Column('price_each', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedSalesData',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('product_line', sa.String(length=100), nullable=False),
    sa.Column('sales', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedSalesOverTime',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('daily_sales', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ArchivedSeasonalItems',
    sa.Column('id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('insight_id', mssql.UNIQUEIDENTIFIER(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('item_description', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['insight_id'], ['ArchivedInsights.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade_archive():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ArchivedSeasonalItems')
    op.drop_table('ArchivedSalesOverTime')
    op.drop_table('ArchivedSalesData')
    op.drop_table('ArchivedQuantityPriceData')
    op.drop_table('ArchivedOrderStatus')
    op.drop_table('ArchivedMonthlySales')
    op.drop_table('ArchivedItemFrequency')
    op.drop_table('ArchivedFiles')
    op.drop_table('ArchivedCustomerSegments')
    op.drop_table('ArchivedCustomerFrequency')
    op.drop_table('ArchivedCommonItemPairs')
    op.drop_table('ArchivedInsights')
    # ### end Alembic commands ###

